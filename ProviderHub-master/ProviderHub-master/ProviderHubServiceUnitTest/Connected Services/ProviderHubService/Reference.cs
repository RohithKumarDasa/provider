//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProviderHubServiceUnitTest.ProviderHubService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Provider", Namespace="http://schemas.datacontract.org/2004/07/ProviderHubService")]
    [System.SerializableAttribute()]
    public partial class Provider : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CSP_IndicatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProviderHubServiceUnitTest.ProviderHubService.Credential[] CredentialListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CredentialsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateOfBirthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EffectiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EpicProviderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalProviderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalProviderNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProviderHubServiceUnitTest.ProviderHubService.ProviderGender GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InternalNotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProviderHubServiceUnitTest.ProviderHubService.Language[] LanguageListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LanguagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastUpdatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastUpdatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MedicaidIndicatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MedicaidProviderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> MedicareEffectiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MedicareIndicatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MedicarePTANField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> MedicareTerminationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiddleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NPIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProviderHubServiceUnitTest.ProviderHubService.Specialty[] ProviderSpecialtiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TerminationDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CSP_Indicator {
            get {
                return this.CSP_IndicatorField;
            }
            set {
                if ((this.CSP_IndicatorField.Equals(value) != true)) {
                    this.CSP_IndicatorField = value;
                    this.RaisePropertyChanged("CSP_Indicator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProviderHubServiceUnitTest.ProviderHubService.Credential[] CredentialList {
            get {
                return this.CredentialListField;
            }
            set {
                if ((object.ReferenceEquals(this.CredentialListField, value) != true)) {
                    this.CredentialListField = value;
                    this.RaisePropertyChanged("CredentialList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Credentials {
            get {
                return this.CredentialsField;
            }
            set {
                if ((object.ReferenceEquals(this.CredentialsField, value) != true)) {
                    this.CredentialsField = value;
                    this.RaisePropertyChanged("Credentials");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateOfBirth {
            get {
                return this.DateOfBirthField;
            }
            set {
                if ((this.DateOfBirthField.Equals(value) != true)) {
                    this.DateOfBirthField = value;
                    this.RaisePropertyChanged("DateOfBirth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EffectiveDate {
            get {
                return this.EffectiveDateField;
            }
            set {
                if ((this.EffectiveDateField.Equals(value) != true)) {
                    this.EffectiveDateField = value;
                    this.RaisePropertyChanged("EffectiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EpicProviderID {
            get {
                return this.EpicProviderIDField;
            }
            set {
                if ((object.ReferenceEquals(this.EpicProviderIDField, value) != true)) {
                    this.EpicProviderIDField = value;
                    this.RaisePropertyChanged("EpicProviderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalProviderID {
            get {
                return this.ExternalProviderIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalProviderIDField, value) != true)) {
                    this.ExternalProviderIDField = value;
                    this.RaisePropertyChanged("ExternalProviderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalProviderName {
            get {
                return this.ExternalProviderNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalProviderNameField, value) != true)) {
                    this.ExternalProviderNameField = value;
                    this.RaisePropertyChanged("ExternalProviderName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProviderHubServiceUnitTest.ProviderHubService.ProviderGender Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((this.GenderField.Equals(value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InternalNotes {
            get {
                return this.InternalNotesField;
            }
            set {
                if ((object.ReferenceEquals(this.InternalNotesField, value) != true)) {
                    this.InternalNotesField = value;
                    this.RaisePropertyChanged("InternalNotes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProviderHubServiceUnitTest.ProviderHubService.Language[] LanguageList {
            get {
                return this.LanguageListField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageListField, value) != true)) {
                    this.LanguageListField = value;
                    this.RaisePropertyChanged("LanguageList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Languages {
            get {
                return this.LanguagesField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguagesField, value) != true)) {
                    this.LanguagesField = value;
                    this.RaisePropertyChanged("Languages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastUpdatedBy {
            get {
                return this.LastUpdatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LastUpdatedByField, value) != true)) {
                    this.LastUpdatedByField = value;
                    this.RaisePropertyChanged("LastUpdatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastUpdatedDate {
            get {
                return this.LastUpdatedDateField;
            }
            set {
                if ((this.LastUpdatedDateField.Equals(value) != true)) {
                    this.LastUpdatedDateField = value;
                    this.RaisePropertyChanged("LastUpdatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MedicaidIndicator {
            get {
                return this.MedicaidIndicatorField;
            }
            set {
                if ((this.MedicaidIndicatorField.Equals(value) != true)) {
                    this.MedicaidIndicatorField = value;
                    this.RaisePropertyChanged("MedicaidIndicator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MedicaidProviderID {
            get {
                return this.MedicaidProviderIDField;
            }
            set {
                if ((object.ReferenceEquals(this.MedicaidProviderIDField, value) != true)) {
                    this.MedicaidProviderIDField = value;
                    this.RaisePropertyChanged("MedicaidProviderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> MedicareEffectiveDate {
            get {
                return this.MedicareEffectiveDateField;
            }
            set {
                if ((this.MedicareEffectiveDateField.Equals(value) != true)) {
                    this.MedicareEffectiveDateField = value;
                    this.RaisePropertyChanged("MedicareEffectiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MedicareIndicator {
            get {
                return this.MedicareIndicatorField;
            }
            set {
                if ((this.MedicareIndicatorField.Equals(value) != true)) {
                    this.MedicareIndicatorField = value;
                    this.RaisePropertyChanged("MedicareIndicator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MedicarePTAN {
            get {
                return this.MedicarePTANField;
            }
            set {
                if ((object.ReferenceEquals(this.MedicarePTANField, value) != true)) {
                    this.MedicarePTANField = value;
                    this.RaisePropertyChanged("MedicarePTAN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> MedicareTerminationDate {
            get {
                return this.MedicareTerminationDateField;
            }
            set {
                if ((this.MedicareTerminationDateField.Equals(value) != true)) {
                    this.MedicareTerminationDateField = value;
                    this.RaisePropertyChanged("MedicareTerminationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiddleName {
            get {
                return this.MiddleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MiddleNameField, value) != true)) {
                    this.MiddleNameField = value;
                    this.RaisePropertyChanged("MiddleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NPI {
            get {
                return this.NPIField;
            }
            set {
                if ((object.ReferenceEquals(this.NPIField, value) != true)) {
                    this.NPIField = value;
                    this.RaisePropertyChanged("NPI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProviderHubServiceUnitTest.ProviderHubService.Specialty[] ProviderSpecialties {
            get {
                return this.ProviderSpecialtiesField;
            }
            set {
                if ((object.ReferenceEquals(this.ProviderSpecialtiesField, value) != true)) {
                    this.ProviderSpecialtiesField = value;
                    this.RaisePropertyChanged("ProviderSpecialties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TerminationDate {
            get {
                return this.TerminationDateField;
            }
            set {
                if ((this.TerminationDateField.Equals(value) != true)) {
                    this.TerminationDateField = value;
                    this.RaisePropertyChanged("TerminationDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Credential", Namespace="http://schemas.datacontract.org/2004/07/ProviderHubService")]
    [System.SerializableAttribute()]
    public partial class Credential : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MappingIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SequenceNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MappingID {
            get {
                return this.MappingIDField;
            }
            set {
                if ((this.MappingIDField.Equals(value) != true)) {
                    this.MappingIDField = value;
                    this.RaisePropertyChanged("MappingID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SequenceNumber {
            get {
                return this.SequenceNumberField;
            }
            set {
                if ((this.SequenceNumberField.Equals(value) != true)) {
                    this.SequenceNumberField = value;
                    this.RaisePropertyChanged("SequenceNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProviderGender", Namespace="http://schemas.datacontract.org/2004/07/ProviderHubService")]
    public enum ProviderGender : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Female = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Male = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Language", Namespace="http://schemas.datacontract.org/2004/07/ProviderHubService")]
    [System.SerializableAttribute()]
    public partial class Language : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MappingIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SequenceNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MappingID {
            get {
                return this.MappingIDField;
            }
            set {
                if ((this.MappingIDField.Equals(value) != true)) {
                    this.MappingIDField = value;
                    this.RaisePropertyChanged("MappingID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SequenceNumber {
            get {
                return this.SequenceNumberField;
            }
            set {
                if ((this.SequenceNumberField.Equals(value) != true)) {
                    this.SequenceNumberField = value;
                    this.RaisePropertyChanged("SequenceNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Specialty", Namespace="http://schemas.datacontract.org/2004/07/ProviderHubService")]
    [System.SerializableAttribute()]
    public partial class Specialty : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MappingIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SequenceNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MappingID {
            get {
                return this.MappingIDField;
            }
            set {
                if ((this.MappingIDField.Equals(value) != true)) {
                    this.MappingIDField = value;
                    this.RaisePropertyChanged("MappingID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SequenceNumber {
            get {
                return this.SequenceNumberField;
            }
            set {
                if ((this.SequenceNumberField.Equals(value) != true)) {
                    this.SequenceNumberField = value;
                    this.RaisePropertyChanged("SequenceNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Facility", Namespace="http://schemas.datacontract.org/2004/07/ProviderHubService")]
    [System.SerializableAttribute()]
    public partial class Facility : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProviderHubServiceUnitTest.ProviderHubService.Address FacilityAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InternalNotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastUpdatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastUpdatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NPIField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalID {
            get {
                return this.ExternalIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalIDField, value) != true)) {
                    this.ExternalIDField = value;
                    this.RaisePropertyChanged("ExternalID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProviderHubServiceUnitTest.ProviderHubService.Address FacilityAddress {
            get {
                return this.FacilityAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityAddressField, value) != true)) {
                    this.FacilityAddressField = value;
                    this.RaisePropertyChanged("FacilityAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityName {
            get {
                return this.FacilityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityNameField, value) != true)) {
                    this.FacilityNameField = value;
                    this.RaisePropertyChanged("FacilityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InternalNotes {
            get {
                return this.InternalNotesField;
            }
            set {
                if ((object.ReferenceEquals(this.InternalNotesField, value) != true)) {
                    this.InternalNotesField = value;
                    this.RaisePropertyChanged("InternalNotes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastUpdatedBy {
            get {
                return this.LastUpdatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LastUpdatedByField, value) != true)) {
                    this.LastUpdatedByField = value;
                    this.RaisePropertyChanged("LastUpdatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastUpdatedDate {
            get {
                return this.LastUpdatedDateField;
            }
            set {
                if ((this.LastUpdatedDateField.Equals(value) != true)) {
                    this.LastUpdatedDateField = value;
                    this.RaisePropertyChanged("LastUpdatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NPI {
            get {
                return this.NPIField;
            }
            set {
                if ((object.ReferenceEquals(this.NPIField, value) != true)) {
                    this.NPIField = value;
                    this.RaisePropertyChanged("NPI");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Address", Namespace="http://schemas.datacontract.org/2004/07/ProviderHubService")]
    [System.SerializableAttribute()]
    public partial class Address : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressLine1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressLine2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProviderHubServiceUnitTest.ProviderHubService.AddressType AddressTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AlternatePhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactFirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactLastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaxNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastUpdatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastUpdatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneExtensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WebsiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddressLine1 {
            get {
                return this.AddressLine1Field;
            }
            set {
                if ((object.ReferenceEquals(this.AddressLine1Field, value) != true)) {
                    this.AddressLine1Field = value;
                    this.RaisePropertyChanged("AddressLine1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddressLine2 {
            get {
                return this.AddressLine2Field;
            }
            set {
                if ((object.ReferenceEquals(this.AddressLine2Field, value) != true)) {
                    this.AddressLine2Field = value;
                    this.RaisePropertyChanged("AddressLine2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProviderHubServiceUnitTest.ProviderHubService.AddressType AddressType {
            get {
                return this.AddressTypeField;
            }
            set {
                if ((this.AddressTypeField.Equals(value) != true)) {
                    this.AddressTypeField = value;
                    this.RaisePropertyChanged("AddressType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AlternatePhoneNumber {
            get {
                return this.AlternatePhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.AlternatePhoneNumberField, value) != true)) {
                    this.AlternatePhoneNumberField = value;
                    this.RaisePropertyChanged("AlternatePhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactFirstName {
            get {
                return this.ContactFirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactFirstNameField, value) != true)) {
                    this.ContactFirstNameField = value;
                    this.RaisePropertyChanged("ContactFirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactLastName {
            get {
                return this.ContactLastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactLastNameField, value) != true)) {
                    this.ContactLastNameField = value;
                    this.RaisePropertyChanged("ContactLastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string County {
            get {
                return this.CountyField;
            }
            set {
                if ((object.ReferenceEquals(this.CountyField, value) != true)) {
                    this.CountyField = value;
                    this.RaisePropertyChanged("County");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FaxNumber {
            get {
                return this.FaxNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.FaxNumberField, value) != true)) {
                    this.FaxNumberField = value;
                    this.RaisePropertyChanged("FaxNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastUpdatedBy {
            get {
                return this.LastUpdatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LastUpdatedByField, value) != true)) {
                    this.LastUpdatedByField = value;
                    this.RaisePropertyChanged("LastUpdatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastUpdatedDate {
            get {
                return this.LastUpdatedDateField;
            }
            set {
                if ((this.LastUpdatedDateField.Equals(value) != true)) {
                    this.LastUpdatedDateField = value;
                    this.RaisePropertyChanged("LastUpdatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneExtension {
            get {
                return this.PhoneExtensionField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneExtensionField, value) != true)) {
                    this.PhoneExtensionField = value;
                    this.RaisePropertyChanged("PhoneExtension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Region {
            get {
                return this.RegionField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionField, value) != true)) {
                    this.RegionField = value;
                    this.RaisePropertyChanged("Region");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Website {
            get {
                return this.WebsiteField;
            }
            set {
                if ((object.ReferenceEquals(this.WebsiteField, value) != true)) {
                    this.WebsiteField = value;
                    this.RaisePropertyChanged("Website");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZipCode {
            get {
                return this.ZipCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipCodeField, value) != true)) {
                    this.ZipCodeField = value;
                    this.RaisePropertyChanged("ZipCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddressType", Namespace="http://schemas.datacontract.org/2004/07/ProviderHubService")]
    public enum AddressType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ClinicalPracticeServiceLocation = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BusinessAdmin = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Mail = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchResults", Namespace="http://schemas.datacontract.org/2004/07/ProviderHubService")]
    [System.SerializableAttribute()]
    public partial class SearchResults : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProviderHubServiceUnitTest.ProviderHubService.Facility[] FacilitiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProviderHubServiceUnitTest.ProviderHubService.FacilityProviderRelationship[] FacilityProviderRelationshipsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProviderHubServiceUnitTest.ProviderHubService.Provider[] ProvidersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProviderHubServiceUnitTest.ProviderHubService.Vendor[] VendorsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProviderHubServiceUnitTest.ProviderHubService.Facility[] Facilities {
            get {
                return this.FacilitiesField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilitiesField, value) != true)) {
                    this.FacilitiesField = value;
                    this.RaisePropertyChanged("Facilities");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProviderHubServiceUnitTest.ProviderHubService.FacilityProviderRelationship[] FacilityProviderRelationships {
            get {
                return this.FacilityProviderRelationshipsField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityProviderRelationshipsField, value) != true)) {
                    this.FacilityProviderRelationshipsField = value;
                    this.RaisePropertyChanged("FacilityProviderRelationships");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProviderHubServiceUnitTest.ProviderHubService.Provider[] Providers {
            get {
                return this.ProvidersField;
            }
            set {
                if ((object.ReferenceEquals(this.ProvidersField, value) != true)) {
                    this.ProvidersField = value;
                    this.RaisePropertyChanged("Providers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProviderHubServiceUnitTest.ProviderHubService.Vendor[] Vendors {
            get {
                return this.VendorsField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorsField, value) != true)) {
                    this.VendorsField = value;
                    this.RaisePropertyChanged("Vendors");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FacilityProviderRelationship", Namespace="http://schemas.datacontract.org/2004/07/ProviderHubService")]
    [System.SerializableAttribute()]
    public partial class FacilityProviderRelationship : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AcceptingNewPatientIndicatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProviderHubServiceUnitTest.ProviderHubService.BehavioralHealthAttribute[] BehavioralHealthAttributesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EffectiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExternalProviderIndicatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProviderHubServiceUnitTest.ProviderHubService.Facility FacilityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool FloatProviderIndicatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InternalNotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastUpdatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastUpdatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PrescriberIndicatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProviderHubServiceUnitTest.ProviderHubService.Provider ProviderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProviderEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProviderExtensionNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProviderPhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReferralIndicatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RelationshipIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RelationshipStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TerminationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProviderHubServiceUnitTest.ProviderHubService.Vendor VendorField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AcceptingNewPatientIndicator {
            get {
                return this.AcceptingNewPatientIndicatorField;
            }
            set {
                if ((this.AcceptingNewPatientIndicatorField.Equals(value) != true)) {
                    this.AcceptingNewPatientIndicatorField = value;
                    this.RaisePropertyChanged("AcceptingNewPatientIndicator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProviderHubServiceUnitTest.ProviderHubService.BehavioralHealthAttribute[] BehavioralHealthAttributes {
            get {
                return this.BehavioralHealthAttributesField;
            }
            set {
                if ((object.ReferenceEquals(this.BehavioralHealthAttributesField, value) != true)) {
                    this.BehavioralHealthAttributesField = value;
                    this.RaisePropertyChanged("BehavioralHealthAttributes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EffectiveDate {
            get {
                return this.EffectiveDateField;
            }
            set {
                if ((this.EffectiveDateField.Equals(value) != true)) {
                    this.EffectiveDateField = value;
                    this.RaisePropertyChanged("EffectiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ExternalProviderIndicator {
            get {
                return this.ExternalProviderIndicatorField;
            }
            set {
                if ((this.ExternalProviderIndicatorField.Equals(value) != true)) {
                    this.ExternalProviderIndicatorField = value;
                    this.RaisePropertyChanged("ExternalProviderIndicator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProviderHubServiceUnitTest.ProviderHubService.Facility Facility {
            get {
                return this.FacilityField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityField, value) != true)) {
                    this.FacilityField = value;
                    this.RaisePropertyChanged("Facility");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool FloatProviderIndicator {
            get {
                return this.FloatProviderIndicatorField;
            }
            set {
                if ((this.FloatProviderIndicatorField.Equals(value) != true)) {
                    this.FloatProviderIndicatorField = value;
                    this.RaisePropertyChanged("FloatProviderIndicator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InternalNotes {
            get {
                return this.InternalNotesField;
            }
            set {
                if ((object.ReferenceEquals(this.InternalNotesField, value) != true)) {
                    this.InternalNotesField = value;
                    this.RaisePropertyChanged("InternalNotes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastUpdatedBy {
            get {
                return this.LastUpdatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LastUpdatedByField, value) != true)) {
                    this.LastUpdatedByField = value;
                    this.RaisePropertyChanged("LastUpdatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastUpdatedDate {
            get {
                return this.LastUpdatedDateField;
            }
            set {
                if ((this.LastUpdatedDateField.Equals(value) != true)) {
                    this.LastUpdatedDateField = value;
                    this.RaisePropertyChanged("LastUpdatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PrescriberIndicator {
            get {
                return this.PrescriberIndicatorField;
            }
            set {
                if ((this.PrescriberIndicatorField.Equals(value) != true)) {
                    this.PrescriberIndicatorField = value;
                    this.RaisePropertyChanged("PrescriberIndicator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProviderHubServiceUnitTest.ProviderHubService.Provider Provider {
            get {
                return this.ProviderField;
            }
            set {
                if ((object.ReferenceEquals(this.ProviderField, value) != true)) {
                    this.ProviderField = value;
                    this.RaisePropertyChanged("Provider");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProviderEmail {
            get {
                return this.ProviderEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.ProviderEmailField, value) != true)) {
                    this.ProviderEmailField = value;
                    this.RaisePropertyChanged("ProviderEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProviderExtensionNumber {
            get {
                return this.ProviderExtensionNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ProviderExtensionNumberField, value) != true)) {
                    this.ProviderExtensionNumberField = value;
                    this.RaisePropertyChanged("ProviderExtensionNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProviderPhoneNumber {
            get {
                return this.ProviderPhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ProviderPhoneNumberField, value) != true)) {
                    this.ProviderPhoneNumberField = value;
                    this.RaisePropertyChanged("ProviderPhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReferralIndicator {
            get {
                return this.ReferralIndicatorField;
            }
            set {
                if ((this.ReferralIndicatorField.Equals(value) != true)) {
                    this.ReferralIndicatorField = value;
                    this.RaisePropertyChanged("ReferralIndicator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RelationshipID {
            get {
                return this.RelationshipIDField;
            }
            set {
                if ((this.RelationshipIDField.Equals(value) != true)) {
                    this.RelationshipIDField = value;
                    this.RaisePropertyChanged("RelationshipID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RelationshipStatus {
            get {
                return this.RelationshipStatusField;
            }
            set {
                if ((this.RelationshipStatusField.Equals(value) != true)) {
                    this.RelationshipStatusField = value;
                    this.RaisePropertyChanged("RelationshipStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TerminationDate {
            get {
                return this.TerminationDateField;
            }
            set {
                if ((this.TerminationDateField.Equals(value) != true)) {
                    this.TerminationDateField = value;
                    this.RaisePropertyChanged("TerminationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProviderHubServiceUnitTest.ProviderHubService.Vendor Vendor {
            get {
                return this.VendorField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorField, value) != true)) {
                    this.VendorField = value;
                    this.RaisePropertyChanged("Vendor");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Vendor", Namespace="http://schemas.datacontract.org/2004/07/ProviderHubService")]
    [System.SerializableAttribute()]
    public partial class Vendor : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProviderHubServiceUnitTest.ProviderHubService.Address[] AddressesListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EPICVendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InternalNotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastUpdatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastUpdatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NPIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VendorFacilityMappingIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProviderHubServiceUnitTest.ProviderHubService.Address[] AddressesList {
            get {
                return this.AddressesListField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressesListField, value) != true)) {
                    this.AddressesListField = value;
                    this.RaisePropertyChanged("AddressesList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EPICVendorID {
            get {
                return this.EPICVendorIDField;
            }
            set {
                if ((object.ReferenceEquals(this.EPICVendorIDField, value) != true)) {
                    this.EPICVendorIDField = value;
                    this.RaisePropertyChanged("EPICVendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalID {
            get {
                return this.ExternalIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalIDField, value) != true)) {
                    this.ExternalIDField = value;
                    this.RaisePropertyChanged("ExternalID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InternalNotes {
            get {
                return this.InternalNotesField;
            }
            set {
                if ((object.ReferenceEquals(this.InternalNotesField, value) != true)) {
                    this.InternalNotesField = value;
                    this.RaisePropertyChanged("InternalNotes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastUpdatedBy {
            get {
                return this.LastUpdatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LastUpdatedByField, value) != true)) {
                    this.LastUpdatedByField = value;
                    this.RaisePropertyChanged("LastUpdatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastUpdatedDate {
            get {
                return this.LastUpdatedDateField;
            }
            set {
                if ((this.LastUpdatedDateField.Equals(value) != true)) {
                    this.LastUpdatedDateField = value;
                    this.RaisePropertyChanged("LastUpdatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NPI {
            get {
                return this.NPIField;
            }
            set {
                if ((object.ReferenceEquals(this.NPIField, value) != true)) {
                    this.NPIField = value;
                    this.RaisePropertyChanged("NPI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxID {
            get {
                return this.TaxIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxIDField, value) != true)) {
                    this.TaxIDField = value;
                    this.RaisePropertyChanged("TaxID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VendorFacilityMappingID {
            get {
                return this.VendorFacilityMappingIDField;
            }
            set {
                if ((this.VendorFacilityMappingIDField.Equals(value) != true)) {
                    this.VendorFacilityMappingIDField = value;
                    this.RaisePropertyChanged("VendorFacilityMappingID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorName {
            get {
                return this.VendorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNameField, value) != true)) {
                    this.VendorNameField = value;
                    this.RaisePropertyChanged("VendorName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BehavioralHealthAttribute", Namespace="http://schemas.datacontract.org/2004/07/ProviderHubService")]
    [System.SerializableAttribute()]
    public partial class BehavioralHealthAttribute : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProviderHubServiceUnitTest.ProviderHubService.BHAttributeType BHSpecialtyTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MappingIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SetIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ValueIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProviderHubServiceUnitTest.ProviderHubService.BHAttributeType BHSpecialtyType {
            get {
                return this.BHSpecialtyTypeField;
            }
            set {
                if ((this.BHSpecialtyTypeField.Equals(value) != true)) {
                    this.BHSpecialtyTypeField = value;
                    this.RaisePropertyChanged("BHSpecialtyType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MappingID {
            get {
                return this.MappingIDField;
            }
            set {
                if ((this.MappingIDField.Equals(value) != true)) {
                    this.MappingIDField = value;
                    this.RaisePropertyChanged("MappingID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SetID {
            get {
                return this.SetIDField;
            }
            set {
                if ((this.SetIDField.Equals(value) != true)) {
                    this.SetIDField = value;
                    this.RaisePropertyChanged("SetID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TextValue {
            get {
                return this.TextValueField;
            }
            set {
                if ((object.ReferenceEquals(this.TextValueField, value) != true)) {
                    this.TextValueField = value;
                    this.RaisePropertyChanged("TextValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ValueID {
            get {
                return this.ValueIDField;
            }
            set {
                if ((this.ValueIDField.Equals(value) != true)) {
                    this.ValueIDField = value;
                    this.RaisePropertyChanged("ValueID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BHAttributeType", Namespace="http://schemas.datacontract.org/2004/07/ProviderHubService")]
    public enum BHAttributeType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ages = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Modes = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Conditions = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TherapeuticApproaches = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Other = 5,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProviderHubService.IProviderHubService")]
    public interface IProviderHubService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderHubService/GetData", ReplyAction="http://tempuri.org/IProviderHubService/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderHubService/GetData", ReplyAction="http://tempuri.org/IProviderHubService/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderHubService/GetProviderByID", ReplyAction="http://tempuri.org/IProviderHubService/GetProviderByIDResponse")]
        ProviderHubServiceUnitTest.ProviderHubService.Provider GetProviderByID(int providerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderHubService/GetProviderByID", ReplyAction="http://tempuri.org/IProviderHubService/GetProviderByIDResponse")]
        System.Threading.Tasks.Task<ProviderHubServiceUnitTest.ProviderHubService.Provider> GetProviderByIDAsync(int providerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderHubService/GetProviderLanguageByID", ReplyAction="http://tempuri.org/IProviderHubService/GetProviderLanguageByIDResponse")]
        ProviderHubServiceUnitTest.ProviderHubService.Language[] GetProviderLanguageByID(int providerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderHubService/GetProviderLanguageByID", ReplyAction="http://tempuri.org/IProviderHubService/GetProviderLanguageByIDResponse")]
        System.Threading.Tasks.Task<ProviderHubServiceUnitTest.ProviderHubService.Language[]> GetProviderLanguageByIDAsync(int providerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderHubService/GetProviderCredentialByID", ReplyAction="http://tempuri.org/IProviderHubService/GetProviderCredentialByIDResponse")]
        ProviderHubServiceUnitTest.ProviderHubService.Credential[] GetProviderCredentialByID(int providerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderHubService/GetProviderCredentialByID", ReplyAction="http://tempuri.org/IProviderHubService/GetProviderCredentialByIDResponse")]
        System.Threading.Tasks.Task<ProviderHubServiceUnitTest.ProviderHubService.Credential[]> GetProviderCredentialByIDAsync(int providerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderHubService/GetFacilityByID", ReplyAction="http://tempuri.org/IProviderHubService/GetFacilityByIDResponse")]
        ProviderHubServiceUnitTest.ProviderHubService.Facility GetFacilityByID(int facilityID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderHubService/GetFacilityByID", ReplyAction="http://tempuri.org/IProviderHubService/GetFacilityByIDResponse")]
        System.Threading.Tasks.Task<ProviderHubServiceUnitTest.ProviderHubService.Facility> GetFacilityByIDAsync(int facilityID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderHubService/GetAddressByFacilityID", ReplyAction="http://tempuri.org/IProviderHubService/GetAddressByFacilityIDResponse")]
        ProviderHubServiceUnitTest.ProviderHubService.Address GetAddressByFacilityID(int facilityID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderHubService/GetAddressByFacilityID", ReplyAction="http://tempuri.org/IProviderHubService/GetAddressByFacilityIDResponse")]
        System.Threading.Tasks.Task<ProviderHubServiceUnitTest.ProviderHubService.Address> GetAddressByFacilityIDAsync(int facilityID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderHubService/GetProviderList", ReplyAction="http://tempuri.org/IProviderHubService/GetProviderListResponse")]
        ProviderHubServiceUnitTest.ProviderHubService.Provider[] GetProviderList(string searchValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderHubService/GetProviderList", ReplyAction="http://tempuri.org/IProviderHubService/GetProviderListResponse")]
        System.Threading.Tasks.Task<ProviderHubServiceUnitTest.ProviderHubService.Provider[]> GetProviderListAsync(string searchValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderHubService/GetFacilityList", ReplyAction="http://tempuri.org/IProviderHubService/GetFacilityListResponse")]
        ProviderHubServiceUnitTest.ProviderHubService.Facility[] GetFacilityList(string searchValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderHubService/GetFacilityList", ReplyAction="http://tempuri.org/IProviderHubService/GetFacilityListResponse")]
        System.Threading.Tasks.Task<ProviderHubServiceUnitTest.ProviderHubService.Facility[]> GetFacilityListAsync(string searchValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderHubService/SearchForValue", ReplyAction="http://tempuri.org/IProviderHubService/SearchForValueResponse")]
        ProviderHubServiceUnitTest.ProviderHubService.SearchResults SearchForValue(string searchValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderHubService/SearchForValue", ReplyAction="http://tempuri.org/IProviderHubService/SearchForValueResponse")]
        System.Threading.Tasks.Task<ProviderHubServiceUnitTest.ProviderHubService.SearchResults> SearchForValueAsync(string searchValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderHubService/GetFacilityProviderRelationshipList", ReplyAction="http://tempuri.org/IProviderHubService/GetFacilityProviderRelationshipListRespons" +
            "e")]
        ProviderHubServiceUnitTest.ProviderHubService.FacilityProviderRelationship[] GetFacilityProviderRelationshipList(string searchValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderHubService/GetFacilityProviderRelationshipList", ReplyAction="http://tempuri.org/IProviderHubService/GetFacilityProviderRelationshipListRespons" +
            "e")]
        System.Threading.Tasks.Task<ProviderHubServiceUnitTest.ProviderHubService.FacilityProviderRelationship[]> GetFacilityProviderRelationshipListAsync(string searchValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderHubService/GetFacilityProviderRelationshipByID", ReplyAction="http://tempuri.org/IProviderHubService/GetFacilityProviderRelationshipByIDRespons" +
            "e")]
        ProviderHubServiceUnitTest.ProviderHubService.FacilityProviderRelationship GetFacilityProviderRelationshipByID(int relationshipID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderHubService/GetFacilityProviderRelationshipByID", ReplyAction="http://tempuri.org/IProviderHubService/GetFacilityProviderRelationshipByIDRespons" +
            "e")]
        System.Threading.Tasks.Task<ProviderHubServiceUnitTest.ProviderHubService.FacilityProviderRelationship> GetFacilityProviderRelationshipByIDAsync(int relationshipID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderHubService/SaveProviderDetail", ReplyAction="http://tempuri.org/IProviderHubService/SaveProviderDetailResponse")]
        int SaveProviderDetail(ProviderHubServiceUnitTest.ProviderHubService.Provider provider);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderHubService/SaveProviderDetail", ReplyAction="http://tempuri.org/IProviderHubService/SaveProviderDetailResponse")]
        System.Threading.Tasks.Task<int> SaveProviderDetailAsync(ProviderHubServiceUnitTest.ProviderHubService.Provider provider);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderHubService/SaveFacility", ReplyAction="http://tempuri.org/IProviderHubService/SaveFacilityResponse")]
        int SaveFacility(ProviderHubServiceUnitTest.ProviderHubService.Facility facility);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderHubService/SaveFacility", ReplyAction="http://tempuri.org/IProviderHubService/SaveFacilityResponse")]
        System.Threading.Tasks.Task<int> SaveFacilityAsync(ProviderHubServiceUnitTest.ProviderHubService.Facility facility);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderHubService/SaveFacilityProviderRelationship", ReplyAction="http://tempuri.org/IProviderHubService/SaveFacilityProviderRelationshipResponse")]
        int SaveFacilityProviderRelationship(ProviderHubServiceUnitTest.ProviderHubService.FacilityProviderRelationship relationship);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderHubService/SaveFacilityProviderRelationship", ReplyAction="http://tempuri.org/IProviderHubService/SaveFacilityProviderRelationshipResponse")]
        System.Threading.Tasks.Task<int> SaveFacilityProviderRelationshipAsync(ProviderHubServiceUnitTest.ProviderHubService.FacilityProviderRelationship relationship);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderHubService/SaveAddress", ReplyAction="http://tempuri.org/IProviderHubService/SaveAddressResponse")]
        int SaveAddress(ProviderHubServiceUnitTest.ProviderHubService.Address address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderHubService/SaveAddress", ReplyAction="http://tempuri.org/IProviderHubService/SaveAddressResponse")]
        System.Threading.Tasks.Task<int> SaveAddressAsync(ProviderHubServiceUnitTest.ProviderHubService.Address address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderHubService/MapAddressToFacility", ReplyAction="http://tempuri.org/IProviderHubService/MapAddressToFacilityResponse")]
        int MapAddressToFacility(int facilityID, int addressID, string createdBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderHubService/MapAddressToFacility", ReplyAction="http://tempuri.org/IProviderHubService/MapAddressToFacilityResponse")]
        System.Threading.Tasks.Task<int> MapAddressToFacilityAsync(int facilityID, int addressID, string createdBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderHubService/GetLanguageList", ReplyAction="http://tempuri.org/IProviderHubService/GetLanguageListResponse")]
        ProviderHubServiceUnitTest.ProviderHubService.Language[] GetLanguageList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderHubService/GetLanguageList", ReplyAction="http://tempuri.org/IProviderHubService/GetLanguageListResponse")]
        System.Threading.Tasks.Task<ProviderHubServiceUnitTest.ProviderHubService.Language[]> GetLanguageListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderHubService/GetCredentialList", ReplyAction="http://tempuri.org/IProviderHubService/GetCredentialListResponse")]
        ProviderHubServiceUnitTest.ProviderHubService.Credential[] GetCredentialList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderHubService/GetCredentialList", ReplyAction="http://tempuri.org/IProviderHubService/GetCredentialListResponse")]
        System.Threading.Tasks.Task<ProviderHubServiceUnitTest.ProviderHubService.Credential[]> GetCredentialListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderHubService/GetVendorList", ReplyAction="http://tempuri.org/IProviderHubService/GetVendorListResponse")]
        ProviderHubServiceUnitTest.ProviderHubService.Vendor[] GetVendorList(string searchValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderHubService/GetVendorList", ReplyAction="http://tempuri.org/IProviderHubService/GetVendorListResponse")]
        System.Threading.Tasks.Task<ProviderHubServiceUnitTest.ProviderHubService.Vendor[]> GetVendorListAsync(string searchValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderHubService/SaveVendor", ReplyAction="http://tempuri.org/IProviderHubService/SaveVendorResponse")]
        int SaveVendor(ProviderHubServiceUnitTest.ProviderHubService.Vendor vendor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderHubService/SaveVendor", ReplyAction="http://tempuri.org/IProviderHubService/SaveVendorResponse")]
        System.Threading.Tasks.Task<int> SaveVendorAsync(ProviderHubServiceUnitTest.ProviderHubService.Vendor vendor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderHubService/MapAddressToVendor", ReplyAction="http://tempuri.org/IProviderHubService/MapAddressToVendorResponse")]
        int MapAddressToVendor(int vendorID, int addressID, string createdBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderHubService/MapAddressToVendor", ReplyAction="http://tempuri.org/IProviderHubService/MapAddressToVendorResponse")]
        System.Threading.Tasks.Task<int> MapAddressToVendorAsync(int vendorID, int addressID, string createdBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderHubService/GetVendorByID", ReplyAction="http://tempuri.org/IProviderHubService/GetVendorByIDResponse")]
        ProviderHubServiceUnitTest.ProviderHubService.Vendor GetVendorByID(int vendorID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderHubService/GetVendorByID", ReplyAction="http://tempuri.org/IProviderHubService/GetVendorByIDResponse")]
        System.Threading.Tasks.Task<ProviderHubServiceUnitTest.ProviderHubService.Vendor> GetVendorByIDAsync(int vendorID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderHubService/GetAddressByVendorID", ReplyAction="http://tempuri.org/IProviderHubService/GetAddressByVendorIDResponse")]
        ProviderHubServiceUnitTest.ProviderHubService.Address[] GetAddressByVendorID(int vendorID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderHubService/GetAddressByVendorID", ReplyAction="http://tempuri.org/IProviderHubService/GetAddressByVendorIDResponse")]
        System.Threading.Tasks.Task<ProviderHubServiceUnitTest.ProviderHubService.Address[]> GetAddressByVendorIDAsync(int vendorID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderHubService/MapFacilityToVendor", ReplyAction="http://tempuri.org/IProviderHubService/MapFacilityToVendorResponse")]
        int MapFacilityToVendor(int facilityID, int vendorID, string createdBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderHubService/MapFacilityToVendor", ReplyAction="http://tempuri.org/IProviderHubService/MapFacilityToVendorResponse")]
        System.Threading.Tasks.Task<int> MapFacilityToVendorAsync(int facilityID, int vendorID, string createdBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderHubService/SaveLanguageByProviderID", ReplyAction="http://tempuri.org/IProviderHubService/SaveLanguageByProviderIDResponse")]
        bool SaveLanguageByProviderID(int providerID, ProviderHubServiceUnitTest.ProviderHubService.Language[] languages);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderHubService/SaveLanguageByProviderID", ReplyAction="http://tempuri.org/IProviderHubService/SaveLanguageByProviderIDResponse")]
        System.Threading.Tasks.Task<bool> SaveLanguageByProviderIDAsync(int providerID, ProviderHubServiceUnitTest.ProviderHubService.Language[] languages);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderHubService/SaveCredentialByProviderID", ReplyAction="http://tempuri.org/IProviderHubService/SaveCredentialByProviderIDResponse")]
        bool SaveCredentialByProviderID(int providerID, ProviderHubServiceUnitTest.ProviderHubService.Credential[] credentials);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderHubService/SaveCredentialByProviderID", ReplyAction="http://tempuri.org/IProviderHubService/SaveCredentialByProviderIDResponse")]
        System.Threading.Tasks.Task<bool> SaveCredentialByProviderIDAsync(int providerID, ProviderHubServiceUnitTest.ProviderHubService.Credential[] credentials);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderHubService/AdvancedSearch", ReplyAction="http://tempuri.org/IProviderHubService/AdvancedSearchResponse")]
        ProviderHubServiceUnitTest.ProviderHubService.FacilityProviderRelationship[] AdvancedSearch(System.Collections.Generic.Dictionary<string, string[]> args);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderHubService/AdvancedSearch", ReplyAction="http://tempuri.org/IProviderHubService/AdvancedSearchResponse")]
        System.Threading.Tasks.Task<ProviderHubServiceUnitTest.ProviderHubService.FacilityProviderRelationship[]> AdvancedSearchAsync(System.Collections.Generic.Dictionary<string, string[]> args);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderHubService/GetBehavioralHealthAttributeByID", ReplyAction="http://tempuri.org/IProviderHubService/GetBehavioralHealthAttributeByIDResponse")]
        ProviderHubServiceUnitTest.ProviderHubService.BehavioralHealthAttribute[] GetBehavioralHealthAttributeByID(ProviderHubServiceUnitTest.ProviderHubService.BHAttributeType bHAttributeType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderHubService/GetBehavioralHealthAttributeByID", ReplyAction="http://tempuri.org/IProviderHubService/GetBehavioralHealthAttributeByIDResponse")]
        System.Threading.Tasks.Task<ProviderHubServiceUnitTest.ProviderHubService.BehavioralHealthAttribute[]> GetBehavioralHealthAttributeByIDAsync(ProviderHubServiceUnitTest.ProviderHubService.BHAttributeType bHAttributeType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderHubService/GetBHAttributeByRelationshipID", ReplyAction="http://tempuri.org/IProviderHubService/GetBHAttributeByRelationshipIDResponse")]
        ProviderHubServiceUnitTest.ProviderHubService.BehavioralHealthAttribute[] GetBHAttributeByRelationshipID(int relationshipID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderHubService/GetBHAttributeByRelationshipID", ReplyAction="http://tempuri.org/IProviderHubService/GetBHAttributeByRelationshipIDResponse")]
        System.Threading.Tasks.Task<ProviderHubServiceUnitTest.ProviderHubService.BehavioralHealthAttribute[]> GetBHAttributeByRelationshipIDAsync(int relationshipID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderHubService/SaveBHAttributeToRelationship", ReplyAction="http://tempuri.org/IProviderHubService/SaveBHAttributeToRelationshipResponse")]
        bool SaveBHAttributeToRelationship(int relationshipID, ProviderHubServiceUnitTest.ProviderHubService.BehavioralHealthAttribute[] bhAttributeList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderHubService/SaveBHAttributeToRelationship", ReplyAction="http://tempuri.org/IProviderHubService/SaveBHAttributeToRelationshipResponse")]
        System.Threading.Tasks.Task<bool> SaveBHAttributeToRelationshipAsync(int relationshipID, ProviderHubServiceUnitTest.ProviderHubService.BehavioralHealthAttribute[] bhAttributeList);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProviderHubServiceChannel : ProviderHubServiceUnitTest.ProviderHubService.IProviderHubService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProviderHubServiceClient : System.ServiceModel.ClientBase<ProviderHubServiceUnitTest.ProviderHubService.IProviderHubService>, ProviderHubServiceUnitTest.ProviderHubService.IProviderHubService {
        
        public ProviderHubServiceClient() {
        }
        
        public ProviderHubServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProviderHubServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProviderHubServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProviderHubServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public ProviderHubServiceUnitTest.ProviderHubService.Provider GetProviderByID(int providerID) {
            return base.Channel.GetProviderByID(providerID);
        }
        
        public System.Threading.Tasks.Task<ProviderHubServiceUnitTest.ProviderHubService.Provider> GetProviderByIDAsync(int providerID) {
            return base.Channel.GetProviderByIDAsync(providerID);
        }
        
        public ProviderHubServiceUnitTest.ProviderHubService.Language[] GetProviderLanguageByID(int providerID) {
            return base.Channel.GetProviderLanguageByID(providerID);
        }
        
        public System.Threading.Tasks.Task<ProviderHubServiceUnitTest.ProviderHubService.Language[]> GetProviderLanguageByIDAsync(int providerID) {
            return base.Channel.GetProviderLanguageByIDAsync(providerID);
        }
        
        public ProviderHubServiceUnitTest.ProviderHubService.Credential[] GetProviderCredentialByID(int providerID) {
            return base.Channel.GetProviderCredentialByID(providerID);
        }
        
        public System.Threading.Tasks.Task<ProviderHubServiceUnitTest.ProviderHubService.Credential[]> GetProviderCredentialByIDAsync(int providerID) {
            return base.Channel.GetProviderCredentialByIDAsync(providerID);
        }
        
        public ProviderHubServiceUnitTest.ProviderHubService.Facility GetFacilityByID(int facilityID) {
            return base.Channel.GetFacilityByID(facilityID);
        }
        
        public System.Threading.Tasks.Task<ProviderHubServiceUnitTest.ProviderHubService.Facility> GetFacilityByIDAsync(int facilityID) {
            return base.Channel.GetFacilityByIDAsync(facilityID);
        }
        
        public ProviderHubServiceUnitTest.ProviderHubService.Address GetAddressByFacilityID(int facilityID) {
            return base.Channel.GetAddressByFacilityID(facilityID);
        }
        
        public System.Threading.Tasks.Task<ProviderHubServiceUnitTest.ProviderHubService.Address> GetAddressByFacilityIDAsync(int facilityID) {
            return base.Channel.GetAddressByFacilityIDAsync(facilityID);
        }
        
        public ProviderHubServiceUnitTest.ProviderHubService.Provider[] GetProviderList(string searchValue) {
            return base.Channel.GetProviderList(searchValue);
        }
        
        public System.Threading.Tasks.Task<ProviderHubServiceUnitTest.ProviderHubService.Provider[]> GetProviderListAsync(string searchValue) {
            return base.Channel.GetProviderListAsync(searchValue);
        }
        
        public ProviderHubServiceUnitTest.ProviderHubService.Facility[] GetFacilityList(string searchValue) {
            return base.Channel.GetFacilityList(searchValue);
        }
        
        public System.Threading.Tasks.Task<ProviderHubServiceUnitTest.ProviderHubService.Facility[]> GetFacilityListAsync(string searchValue) {
            return base.Channel.GetFacilityListAsync(searchValue);
        }
        
        public ProviderHubServiceUnitTest.ProviderHubService.SearchResults SearchForValue(string searchValue) {
            return base.Channel.SearchForValue(searchValue);
        }
        
        public System.Threading.Tasks.Task<ProviderHubServiceUnitTest.ProviderHubService.SearchResults> SearchForValueAsync(string searchValue) {
            return base.Channel.SearchForValueAsync(searchValue);
        }
        
        public ProviderHubServiceUnitTest.ProviderHubService.FacilityProviderRelationship[] GetFacilityProviderRelationshipList(string searchValue) {
            return base.Channel.GetFacilityProviderRelationshipList(searchValue);
        }
        
        public System.Threading.Tasks.Task<ProviderHubServiceUnitTest.ProviderHubService.FacilityProviderRelationship[]> GetFacilityProviderRelationshipListAsync(string searchValue) {
            return base.Channel.GetFacilityProviderRelationshipListAsync(searchValue);
        }
        
        public ProviderHubServiceUnitTest.ProviderHubService.FacilityProviderRelationship GetFacilityProviderRelationshipByID(int relationshipID) {
            return base.Channel.GetFacilityProviderRelationshipByID(relationshipID);
        }
        
        public System.Threading.Tasks.Task<ProviderHubServiceUnitTest.ProviderHubService.FacilityProviderRelationship> GetFacilityProviderRelationshipByIDAsync(int relationshipID) {
            return base.Channel.GetFacilityProviderRelationshipByIDAsync(relationshipID);
        }
        
        public int SaveProviderDetail(ProviderHubServiceUnitTest.ProviderHubService.Provider provider) {
            return base.Channel.SaveProviderDetail(provider);
        }
        
        public System.Threading.Tasks.Task<int> SaveProviderDetailAsync(ProviderHubServiceUnitTest.ProviderHubService.Provider provider) {
            return base.Channel.SaveProviderDetailAsync(provider);
        }
        
        public int SaveFacility(ProviderHubServiceUnitTest.ProviderHubService.Facility facility) {
            return base.Channel.SaveFacility(facility);
        }
        
        public System.Threading.Tasks.Task<int> SaveFacilityAsync(ProviderHubServiceUnitTest.ProviderHubService.Facility facility) {
            return base.Channel.SaveFacilityAsync(facility);
        }
        
        public int SaveFacilityProviderRelationship(ProviderHubServiceUnitTest.ProviderHubService.FacilityProviderRelationship relationship) {
            return base.Channel.SaveFacilityProviderRelationship(relationship);
        }
        
        public System.Threading.Tasks.Task<int> SaveFacilityProviderRelationshipAsync(ProviderHubServiceUnitTest.ProviderHubService.FacilityProviderRelationship relationship) {
            return base.Channel.SaveFacilityProviderRelationshipAsync(relationship);
        }
        
        public int SaveAddress(ProviderHubServiceUnitTest.ProviderHubService.Address address) {
            return base.Channel.SaveAddress(address);
        }
        
        public System.Threading.Tasks.Task<int> SaveAddressAsync(ProviderHubServiceUnitTest.ProviderHubService.Address address) {
            return base.Channel.SaveAddressAsync(address);
        }
        
        public int MapAddressToFacility(int facilityID, int addressID, string createdBy) {
            return base.Channel.MapAddressToFacility(facilityID, addressID, createdBy);
        }
        
        public System.Threading.Tasks.Task<int> MapAddressToFacilityAsync(int facilityID, int addressID, string createdBy) {
            return base.Channel.MapAddressToFacilityAsync(facilityID, addressID, createdBy);
        }
        
        public ProviderHubServiceUnitTest.ProviderHubService.Language[] GetLanguageList() {
            return base.Channel.GetLanguageList();
        }
        
        public System.Threading.Tasks.Task<ProviderHubServiceUnitTest.ProviderHubService.Language[]> GetLanguageListAsync() {
            return base.Channel.GetLanguageListAsync();
        }
        
        public ProviderHubServiceUnitTest.ProviderHubService.Credential[] GetCredentialList() {
            return base.Channel.GetCredentialList();
        }
        
        public System.Threading.Tasks.Task<ProviderHubServiceUnitTest.ProviderHubService.Credential[]> GetCredentialListAsync() {
            return base.Channel.GetCredentialListAsync();
        }
        
        public ProviderHubServiceUnitTest.ProviderHubService.Vendor[] GetVendorList(string searchValue) {
            return base.Channel.GetVendorList(searchValue);
        }
        
        public System.Threading.Tasks.Task<ProviderHubServiceUnitTest.ProviderHubService.Vendor[]> GetVendorListAsync(string searchValue) {
            return base.Channel.GetVendorListAsync(searchValue);
        }
        
        public int SaveVendor(ProviderHubServiceUnitTest.ProviderHubService.Vendor vendor) {
            return base.Channel.SaveVendor(vendor);
        }
        
        public System.Threading.Tasks.Task<int> SaveVendorAsync(ProviderHubServiceUnitTest.ProviderHubService.Vendor vendor) {
            return base.Channel.SaveVendorAsync(vendor);
        }
        
        public int MapAddressToVendor(int vendorID, int addressID, string createdBy) {
            return base.Channel.MapAddressToVendor(vendorID, addressID, createdBy);
        }
        
        public System.Threading.Tasks.Task<int> MapAddressToVendorAsync(int vendorID, int addressID, string createdBy) {
            return base.Channel.MapAddressToVendorAsync(vendorID, addressID, createdBy);
        }
        
        public ProviderHubServiceUnitTest.ProviderHubService.Vendor GetVendorByID(int vendorID) {
            return base.Channel.GetVendorByID(vendorID);
        }
        
        public System.Threading.Tasks.Task<ProviderHubServiceUnitTest.ProviderHubService.Vendor> GetVendorByIDAsync(int vendorID) {
            return base.Channel.GetVendorByIDAsync(vendorID);
        }
        
        public ProviderHubServiceUnitTest.ProviderHubService.Address[] GetAddressByVendorID(int vendorID) {
            return base.Channel.GetAddressByVendorID(vendorID);
        }
        
        public System.Threading.Tasks.Task<ProviderHubServiceUnitTest.ProviderHubService.Address[]> GetAddressByVendorIDAsync(int vendorID) {
            return base.Channel.GetAddressByVendorIDAsync(vendorID);
        }
        
        public int MapFacilityToVendor(int facilityID, int vendorID, string createdBy) {
            return base.Channel.MapFacilityToVendor(facilityID, vendorID, createdBy);
        }
        
        public System.Threading.Tasks.Task<int> MapFacilityToVendorAsync(int facilityID, int vendorID, string createdBy) {
            return base.Channel.MapFacilityToVendorAsync(facilityID, vendorID, createdBy);
        }
        
        public bool SaveLanguageByProviderID(int providerID, ProviderHubServiceUnitTest.ProviderHubService.Language[] languages) {
            return base.Channel.SaveLanguageByProviderID(providerID, languages);
        }
        
        public System.Threading.Tasks.Task<bool> SaveLanguageByProviderIDAsync(int providerID, ProviderHubServiceUnitTest.ProviderHubService.Language[] languages) {
            return base.Channel.SaveLanguageByProviderIDAsync(providerID, languages);
        }
        
        public bool SaveCredentialByProviderID(int providerID, ProviderHubServiceUnitTest.ProviderHubService.Credential[] credentials) {
            return base.Channel.SaveCredentialByProviderID(providerID, credentials);
        }
        
        public System.Threading.Tasks.Task<bool> SaveCredentialByProviderIDAsync(int providerID, ProviderHubServiceUnitTest.ProviderHubService.Credential[] credentials) {
            return base.Channel.SaveCredentialByProviderIDAsync(providerID, credentials);
        }
        
        public ProviderHubServiceUnitTest.ProviderHubService.FacilityProviderRelationship[] AdvancedSearch(System.Collections.Generic.Dictionary<string, string[]> args) {
            return base.Channel.AdvancedSearch(args);
        }
        
        public System.Threading.Tasks.Task<ProviderHubServiceUnitTest.ProviderHubService.FacilityProviderRelationship[]> AdvancedSearchAsync(System.Collections.Generic.Dictionary<string, string[]> args) {
            return base.Channel.AdvancedSearchAsync(args);
        }
        
        public ProviderHubServiceUnitTest.ProviderHubService.BehavioralHealthAttribute[] GetBehavioralHealthAttributeByID(ProviderHubServiceUnitTest.ProviderHubService.BHAttributeType bHAttributeType) {
            return base.Channel.GetBehavioralHealthAttributeByID(bHAttributeType);
        }
        
        public System.Threading.Tasks.Task<ProviderHubServiceUnitTest.ProviderHubService.BehavioralHealthAttribute[]> GetBehavioralHealthAttributeByIDAsync(ProviderHubServiceUnitTest.ProviderHubService.BHAttributeType bHAttributeType) {
            return base.Channel.GetBehavioralHealthAttributeByIDAsync(bHAttributeType);
        }
        
        public ProviderHubServiceUnitTest.ProviderHubService.BehavioralHealthAttribute[] GetBHAttributeByRelationshipID(int relationshipID) {
            return base.Channel.GetBHAttributeByRelationshipID(relationshipID);
        }
        
        public System.Threading.Tasks.Task<ProviderHubServiceUnitTest.ProviderHubService.BehavioralHealthAttribute[]> GetBHAttributeByRelationshipIDAsync(int relationshipID) {
            return base.Channel.GetBHAttributeByRelationshipIDAsync(relationshipID);
        }
        
        public bool SaveBHAttributeToRelationship(int relationshipID, ProviderHubServiceUnitTest.ProviderHubService.BehavioralHealthAttribute[] bhAttributeList) {
            return base.Channel.SaveBHAttributeToRelationship(relationshipID, bhAttributeList);
        }
        
        public System.Threading.Tasks.Task<bool> SaveBHAttributeToRelationshipAsync(int relationshipID, ProviderHubServiceUnitTest.ProviderHubService.BehavioralHealthAttribute[] bhAttributeList) {
            return base.Channel.SaveBHAttributeToRelationshipAsync(relationshipID, bhAttributeList);
        }
    }
}
